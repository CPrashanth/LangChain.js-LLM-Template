"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const globals_1 = require("@jest/globals");
const hnswlib_1 = require("../hnswlib");
const document_1 = require("../../document");
const fake_1 = require("../../embeddings/fake");
(0, globals_1.test)("Test HNSWLib.fromTexts + addVectors", async () => {
    var _a, _b, _c;
    const vectorStore = await hnswlib_1.HNSWLib.fromTexts(["Hello world"], [{ id: 2 }], new fake_1.FakeEmbeddings());
    (0, globals_1.expect)((_a = vectorStore.index) === null || _a === void 0 ? void 0 : _a.getMaxElements()).toBe(1);
    (0, globals_1.expect)((_b = vectorStore.index) === null || _b === void 0 ? void 0 : _b.getCurrentCount()).toBe(1);
    await vectorStore.addVectors([
        [0, 1, 0, 0],
        [1, 0, 0, 0],
        [0.5, 0.5, 0.5, 0.5],
    ], [
        new document_1.Document({
            pageContent: "hello bye",
            metadata: { id: 5 },
        }),
        new document_1.Document({
            pageContent: "hello worlddwkldnsk",
            metadata: { id: 4 },
        }),
        new document_1.Document({
            pageContent: "hello you",
            metadata: { id: 6 },
        }),
    ]);
    (0, globals_1.expect)((_c = vectorStore.index) === null || _c === void 0 ? void 0 : _c.getMaxElements()).toBe(4);
    const resultTwo = await vectorStore.similaritySearchVectorWithScore([1, 0, 0, 0], 3);
    const resultTwoMetadatas = resultTwo.map(([{ metadata }]) => metadata);
    (0, globals_1.expect)(resultTwoMetadatas).toEqual([{ id: 4 }, { id: 6 }, { id: 2 }]);
});
//# sourceMappingURL=hnswlib.test.js.map