import type { HierarchicalNSW as HierarchicalNSWT, SpaceName } from "hnswlib-node";
import { Embeddings } from "../embeddings/base";
import { SaveableVectorStore } from "./base";
import { Document } from "../document";
import { InMemoryDocstore } from "../docstore";
export interface HNSWLibArgs {
    space: SpaceName;
    numDimensions?: number;
}
export declare class HNSWLib extends SaveableVectorStore {
    index?: HierarchicalNSWT;
    docstore: InMemoryDocstore;
    args: HNSWLibArgs;
    constructor(args: HNSWLibArgs, embeddings: Embeddings, docstore: InMemoryDocstore, index?: HierarchicalNSWT);
    addDocuments(documents: Document[]): Promise<void>;
    addVectors(vectors: number[][], documents: Document[]): Promise<void>;
    similaritySearchVectorWithScore(query: number[], k: number): Promise<[Document, number][]>;
    save(directory: string): Promise<void>;
    static load(directory: string, embeddings: Embeddings): Promise<HNSWLib>;
    static fromTexts(texts: string[], metadatas: object[], embeddings: Embeddings, docstore?: InMemoryDocstore): Promise<HNSWLib>;
    static fromDocuments(docs: Document[], embeddings: Embeddings, docstore?: InMemoryDocstore): Promise<HNSWLib>;
}
