"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SerpAPI = void 0;
const base_1 = require("./base");
let getJson = null;
try {
    // eslint-disable-next-line global-require,import/no-extraneous-dependencies
    ({ getJson } = require("serpapi"));
}
catch (_a) {
    // ignore error
}
/**
 * Wrapper around SerpAPI.
 *
 * To use, you should have the `serpapi` package installed and the SERPAPI_API_KEY environment variable set.
 */
class SerpAPI extends base_1.Tool {
    constructor(apiKey = process.env.SERPAPI_API_KEY, params = {}) {
        super();
        Object.defineProperty(this, "key", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "params", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: "search"
        });
        Object.defineProperty(this, "description", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: "a search engine. useful for when you need to answer questions about current events. input should be a search query."
        });
        // Throw error at construction time.
        if (getJson === null) {
            throw new Error("Please install serpapi as a dependency with, e.g. `yarn add serpapi`");
        }
        if (!apiKey) {
            throw new Error("SerpAPI API key not set. You can set it as SERPAPI_API_KEY in your .env file, or pass it to SerpAPI.");
        }
        this.key = apiKey;
        this.params = params;
    }
    /**
     * Run query through SerpAPI and parse result
     */
    async call(input) {
        var _a, _b, _c, _d, _e, _f, _g;
        if (getJson === null) {
            throw new Error("Please install serpapi as a dependency with, e.g. `npm i serpapi`");
        }
        const res = await getJson("google", {
            ...this.params,
            api_key: this.key,
            q: input,
        });
        if (res.error) {
            throw new Error(`Got error from serpAPI: ${res.error}`);
        }
        if ((_a = res.answer_box) === null || _a === void 0 ? void 0 : _a.answer) {
            return res.answer_box.answer;
        }
        if ((_b = res.answer_box) === null || _b === void 0 ? void 0 : _b.snippet) {
            return res.answer_box.snippet;
        }
        if ((_c = res.answer_box) === null || _c === void 0 ? void 0 : _c.snippet_highlighted_words) {
            return res.answer_box.snippet_highlighted_words[0];
        }
        if ((_d = res.sports_results) === null || _d === void 0 ? void 0 : _d.game_spotlight) {
            return res.sports_results.game_spotlight;
        }
        if ((_e = res.knowledge_graph) === null || _e === void 0 ? void 0 : _e.description) {
            return res.knowledge_graph.description;
        }
        if ((_g = (_f = res.organic_results) === null || _f === void 0 ? void 0 : _f[0]) === null || _g === void 0 ? void 0 : _g.snippet) {
            return res.organic_results[0].snippet;
        }
        return "No good search result found";
    }
}
exports.SerpAPI = SerpAPI;
//# sourceMappingURL=serpapi.js.map