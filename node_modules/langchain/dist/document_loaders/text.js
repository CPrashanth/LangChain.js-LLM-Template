"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TextLoader = void 0;
const document_1 = require("../document");
const base_1 = require("./base");
let readFile = null;
try {
    // eslint-disable-next-line global-require,import/no-extraneous-dependencies
    ({ readFile } = require("fs/promises"));
}
catch (_a) {
    // ignore error, will be throw in constructor
}
class TextLoader extends base_1.BaseDocumentLoader {
    constructor(filePath) {
        super();
        Object.defineProperty(this, "filePath", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: filePath
        });
        /**
         * Throw error at construction time
         * if fs/promises is not installed.
         */
        if (readFile === null) {
            throw new Error("Failed to load fs/promises.`");
        }
    }
    async load() {
        if (readFile === null) {
            throw new Error("Failed to load fs/promises.");
        }
        const text = await readFile(this.filePath, "utf8");
        const metadata = { source: this.filePath };
        return [new document_1.Document({ pageContent: text, metadata })];
    }
}
exports.TextLoader = TextLoader;
//# sourceMappingURL=text.js.map