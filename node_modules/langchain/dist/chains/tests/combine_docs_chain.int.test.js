"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const globals_1 = require("@jest/globals");
const openai_1 = require("../../llms/openai");
const prompts_1 = require("../../prompts");
const llm_chain_1 = require("../llm_chain");
const load_1 = require("../load");
const combine_docs_chain_1 = require("../combine_docs_chain");
const document_1 = require("../../document");
const load_2 = require("../question_answering/load");
(0, globals_1.test)("Test StuffDocumentsChain", async () => {
    const model = new openai_1.OpenAI({});
    const prompt = new prompts_1.PromptTemplate({
        template: "Print {foo}",
        inputVariables: ["foo"],
    });
    const llmChain = new llm_chain_1.LLMChain({ prompt, llm: model });
    const chain = new combine_docs_chain_1.StuffDocumentsChain({
        llmChain,
        documentVariableName: "foo",
    });
    const docs = [
        new document_1.Document({ pageContent: "foo" }),
        new document_1.Document({ pageContent: "bar" }),
        new document_1.Document({ pageContent: "baz" }),
    ];
    const res = await chain.call({ input_documents: docs });
    console.log({ res });
});
(0, globals_1.test)("Test MapReduceDocumentsChain with QA chain", async () => {
    const model = new openai_1.OpenAI({ temperature: 0 });
    const chain = (0, load_2.loadQAChain)(model, { type: "map_reduce" });
    const docs = [
        new document_1.Document({ pageContent: "harrison went to harvard" }),
        new document_1.Document({ pageContent: "ankush went to princeton" }),
    ];
    const res = await chain.call({
        input_documents: docs,
        question: "Where did harrison go to college",
    });
    console.log({ res });
});
(0, globals_1.test)("Load chain from hub", async () => {
    const chain = await (0, load_1.loadChain)("lc://chains/question_answering/stuff/chain.json");
    const docs = [
        new document_1.Document({ pageContent: "foo" }),
        new document_1.Document({ pageContent: "bar" }),
        new document_1.Document({ pageContent: "baz" }),
    ];
    const res = await chain.call({ input_documents: docs, question: "what up" });
    console.log({ res });
});
//# sourceMappingURL=combine_docs_chain.int.test.js.map