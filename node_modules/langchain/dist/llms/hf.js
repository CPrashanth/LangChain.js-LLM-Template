"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.HuggingFaceInference = void 0;
const _1 = require(".");
let HuggingFace = null;
try {
    // eslint-disable-next-line global-require,import/no-extraneous-dependencies
    ({ HuggingFace } = require("huggingface"));
}
catch (_a) {
    // ignore error, will be throw in constructor
}
class HuggingFaceInference extends _1.LLM {
    constructor(fields) {
        var _a;
        super(fields === null || fields === void 0 ? void 0 : fields.callbackManager, fields === null || fields === void 0 ? void 0 : fields.verbose, fields === null || fields === void 0 ? void 0 : fields.concurrency, fields === null || fields === void 0 ? void 0 : fields.cache);
        Object.defineProperty(this, "model", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: "gpt2"
        });
        /**
         * Throw error at construction time
         * if huggingface package is not installed.
         */
        if (HuggingFace === null) {
            throw new Error("Please install huggingface as a dependency with, e.g. `yarn add huggingface`");
        }
        this.model = (_a = fields === null || fields === void 0 ? void 0 : fields.model) !== null && _a !== void 0 ? _a : this.model;
    }
    _llmType() {
        return "huggingface_hub";
    }
    async _call(prompt, _stop) {
        var _a;
        if (HuggingFace === null) {
            throw new Error("Please install huggingface as a dependency with, e.g. `yarn add huggingface`");
        }
        if (process.env.HUGGINGFACEHUB_API_KEY === "") {
            throw new Error("Please set the HUGGINGFACEHUB_API_KEY environment variable");
        }
        const hf = new HuggingFace((_a = process.env.HUGGINGFACEHUB_API_KEY) !== null && _a !== void 0 ? _a : "");
        const res = await hf.textGeneration({
            model: this.model,
            inputs: prompt,
        });
        return res.generated_text;
    }
}
exports.HuggingFaceInference = HuggingFaceInference;
//# sourceMappingURL=hf.js.map